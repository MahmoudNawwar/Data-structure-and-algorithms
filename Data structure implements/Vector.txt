#include <bits/stdc++.h>

using namespace std;
#ifndef UNTITLED15_VECTOR_H
#define UNTITLED15_VECTOR_H


class Vector {
private:
    int *arr= nullptr;
    int size;      // user size
    int capacity;    // actual size

public:
    Vector(int size): size(size)
    {
        if (size<1) size=1;
        capacity = size+10;
        arr = new int [capacity];
    }

    void expand_capacity(){
        capacity *=2;
        int* arr2 = new int[capacity];

        for (int i = 0; i <size ; ++i) {
            arr2[i] = arr[i];
        }
        swap(arr,arr2);

        delete[] arr2;

    }

    int push_back(int val){
        if(capacity==size) expand_capacity();
        arr[size++] = val;
    }


    int get_size(){return size;}

    void insert(int idx, int val){
        assert(idx>=0 and idx<size);
        if (size == capacity)
            expand_capacity();

        for (int i = size-1; i >= idx ; --i)
            arr[i+1] = arr[i];

        arr[idx] = val;
        size++;
    }


    int get(int idx){
        assert(0 <= idx && idx <size);
        return arr[idx];

    }

    void set(int idx, int val){
        assert(0 <= idx && idx <size);
        arr[idx]=val;
    }


    void pop_back() {
        assert(size > 0);
        size--;
    }


    void remove(int idx) {
        assert(0 <= idx && idx < size);

        for (int i = idx; i < size - 1; ++i) {
            arr[i] = arr[i + 1];
        }

        size--;

        if (size < capacity / 2 && capacity > 10) {
            capacity /= 2;
            int *arr2 = new int[capacity];

            for (int i = 0; i < size; ++i) {
                arr2[i] = arr[i];
            }

            swap(arr, arr2);

            delete[] arr2;
        }
    }

    void clear() {
        size = 0;
    }

    bool empty() const {
        return size == 0;
    }

    int get_capacity() const {
        return capacity;
    }




    void print(){
        for (int i = 0; i <size ; ++i) {
            cout<<arr[i]<<" ";
        }
        cout<<'\n';

    }


    int find(int val){
        for (int i = 0; i < size; ++i) {
            if (arr[i] == val) return i;
        }
        return -1;
    }

    int front(){
        return arr[0];
    }

    int back(){
        return arr[size-1];
    }


    ~Vector(){
        delete[] arr;
        arr = nullptr;
    }

};


#endif //UNTITLED15_VECTOR_H
